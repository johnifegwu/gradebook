<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSet1" targetNamespace="http://tempuri.org/DataSet1.xsd" xmlns:mstns="http://tempuri.org/DataSet1.xsd" xmlns="http://tempuri.org/DataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="gradebookConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="gradebookConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.GradeBook.Data.Properties.Settings.GlobalReference.Default.gradebookConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="booksTableAdapter" GeneratorDataComponentClassName="booksTableAdapter" Name="books" UserDataComponentName="booksTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="gradebookConnectionString (Settings)" DbObjectName="gradebook.dbo.books" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[books] WHERE (([Id] = @Original_Id) AND ([bookname] = @Original_bookname))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_bookname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="bookname" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[books] ([Id], [bookname]) VALUES (@Id, @bookname);
SELECT Id, bookname FROM books WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@bookname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="bookname" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, bookname FROM dbo.books</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[books] SET [Id] = @Id, [bookname] = @bookname WHERE (([Id] = @Original_Id) AND ([bookname] = @Original_bookname));
SELECT Id, bookname FROM books WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@bookname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="bookname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_bookname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="bookname" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="bookname" DataSetColumn="bookname" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="gradebookConnectionString (Settings)" DbObjectName="gradebook.dbo.books" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByNookName" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByBookName" GeneratorSourceName="FillByNookName" GetMethodModifier="Public" GetMethodName="GetDataByBookName" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByBookName" UserSourceName="FillByNookName">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Id, bookname
FROM            books
WHERE        (bookname = @bookName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="bookName" ColumnName="bookname" DataSourceName="gradebook.dbo.books" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@bookName" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="bookname" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="gradesTableAdapter" GeneratorDataComponentClassName="gradesTableAdapter" Name="grades" UserDataComponentName="gradesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="gradebookConnectionString (Settings)" DbObjectName="gradebook.dbo.grades" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[grades] WHERE (([Id] = @Original_Id) AND ([bookname] = @Original_bookname) AND ([grade] = @Original_grade))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_bookname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="bookname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_grade" Precision="18" ProviderType="Decimal" Scale="7" Size="0" SourceColumn="grade" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[grades] ([Id], [bookname], [grade]) VALUES (@Id, @bookname, @grade);
SELECT Id, bookname, grade FROM grades WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@bookname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="bookname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@grade" Precision="18" ProviderType="Decimal" Scale="7" Size="0" SourceColumn="grade" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, bookname, grade FROM dbo.grades</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[grades] SET [Id] = @Id, [bookname] = @bookname, [grade] = @grade WHERE (([Id] = @Original_Id) AND ([bookname] = @Original_bookname) AND ([grade] = @Original_grade));
SELECT Id, bookname, grade FROM grades WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@bookname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="bookname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@grade" Precision="18" ProviderType="Decimal" Scale="7" Size="0" SourceColumn="grade" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_bookname" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="bookname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_grade" Precision="18" ProviderType="Decimal" Scale="7" Size="0" SourceColumn="grade" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="bookname" DataSetColumn="bookname" />
              <Mapping SourceColumn="grade" DataSetColumn="grade" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="gradebookConnectionString (Settings)" DbObjectName="gradebook.dbo.grades" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByBookName" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByBookName" GeneratorSourceName="FillByBookName" GetMethodModifier="Public" GetMethodName="GetDataByBookName" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByBookName" UserSourceName="FillByBookName">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        Id, bookname, grade
FROM            grades
WHERE        (bookname = @bookName)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="bookName" ColumnName="bookname" DataSourceName="gradebook.dbo.grades" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@bookName" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="bookname" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="DataSet1" msprop:Generator_UserDSName="DataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="books" msprop:Generator_TableClassName="booksDataTable" msprop:Generator_TableVarName="tablebooks" msprop:Generator_TablePropName="books" msprop:Generator_RowDeletingName="booksRowDeleting" msprop:Generator_RowChangingName="booksRowChanging" msprop:Generator_RowEvHandlerName="booksRowChangeEventHandler" msprop:Generator_RowDeletedName="booksRowDeleted" msprop:Generator_UserTableName="books" msprop:Generator_RowChangedName="booksRowChanged" msprop:Generator_RowEvArgName="booksRowChangeEvent" msprop:Generator_RowClassName="booksRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="bookname" msprop:Generator_ColumnVarNameInTable="columnbookname" msprop:Generator_ColumnPropNameInRow="bookname" msprop:Generator_ColumnPropNameInTable="booknameColumn" msprop:Generator_UserColumnName="bookname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="grades" msprop:Generator_TableClassName="gradesDataTable" msprop:Generator_TableVarName="tablegrades" msprop:Generator_TablePropName="grades" msprop:Generator_RowDeletingName="gradesRowDeleting" msprop:Generator_RowChangingName="gradesRowChanging" msprop:Generator_RowEvHandlerName="gradesRowChangeEventHandler" msprop:Generator_RowDeletedName="gradesRowDeleted" msprop:Generator_UserTableName="grades" msprop:Generator_RowChangedName="gradesRowChanged" msprop:Generator_RowEvArgName="gradesRowChangeEvent" msprop:Generator_RowClassName="gradesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="bookname" msprop:Generator_ColumnVarNameInTable="columnbookname" msprop:Generator_ColumnPropNameInRow="bookname" msprop:Generator_ColumnPropNameInTable="booknameColumn" msprop:Generator_UserColumnName="bookname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="grade" msprop:Generator_ColumnVarNameInTable="columngrade" msprop:Generator_ColumnPropNameInRow="grade" msprop:Generator_ColumnPropNameInTable="gradeColumn" msprop:Generator_UserColumnName="grade" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:books" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="grades_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:grades" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
</xs:schema>